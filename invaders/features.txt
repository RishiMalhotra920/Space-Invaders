I added three additional features.

1. The program creates additional waves if the player wins or loses. If the player wins, the rate at which aliens moves increase; otherwise, if the player loses, the alien speed is set back to the constant ALIEN_SPEED. This is done by creating a new attribute _alienSpeed and using that instead of ALIEN_SPEED. To create a new wave, if the player clicks the s key, the state is changed back to STATE_NEWWAVE and a new wave is created with a higher speed.

2. The program creates 2 barriers on the screen. A new class Barrier was created and the barriers are instances of this class. Each of these barriers have health as shown in the constants BARRIER_HEALTH. If any bolt (alien's or player's hits the barrier), the barrier's health decrements by BARRIER_HEALTH_DECREMENT. To keep track of the health, a new hidden attribute  _health is made. Method reduceHealth alters this hidden attribute. There is a collides function which detects collisions between bolts. The barrier will be destroyed if more than a certain number of collisions occur with the barrier. As the constants are set currently, the barrier can soak 6 bullets before being destroyed. However, if the aliens are already below the y coordinate of the barrier, then they are allowed to move behind the barrier, and continue their regular movement without being restricted by the barrier.

3. Every time the ship is killed, the user is displayed the number of lives he has left. He can press S to continue the game. This is done by getting the lives using a getter in wave.py and concatenating this with the returned value. Finally the resulting string is displayed on the screen.